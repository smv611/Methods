using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using WebAppStaffRnch.Models;
using PagedList;
using PagedList.Mvc;
using WebAppStaffRnch.ViewModel;

namespace WebAppStaffRnch.Controllers
{
    public class PeopleController : Controller
    {
        private staffRnchEntities1 db = new staffRnchEntities1();

        // GET: People
        public ActionResult Index(string searchString, int? page)
        {
            //int pageSize = 8;
            //int pageNumber = (page ?? 1);
            //var qData = (from q in db.People select q).OrderBy(s => s.id).Skip(0);

            //if (!string.IsNullOrEmpty(searchString))
            //{
            //    qData = qData.Where(s => s.Фамилия.Contains(searchString) 
            //    || s.Имя.Contains(searchString) || s.ВнТел.Contains(searchString)||s.Примечание.Contains(searchString));
            //}
            //return View(qData.ToPagedList(pageNumber, pageSize));

            var _listFromModel = db.People.ToList();
            var _listViewModel = new List<PersonVM>();
            foreach (var item in _listFromModel)
            {
                _listViewModel.Add(PersonVM.GetViewModel(item));
            }

            return View(_listViewModel);
        }

        // GET: People/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Person person = db.People.Find(id);
            if (person == null)
            {
                return HttpNotFound();
            }
            return View(person);
        }

        // GET: People/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: People/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "id,Фамилия,Имя,Отчество,Отдел,Должность,ВнТел,Кабинет,Телефон_1,Телефон_2,Email,Корпус,Этаж,Фото,Примечание,DocFile,TimeChange,EnterDataTime")] Person person, HttpPostedFileBase uploadFile)
        {
            if (ModelState.IsValid)
            {
                if (uploadFile != null)
                {
                    person.Фото = new byte[uploadFile.ContentLength];
                    uploadFile.InputStream.Read(person.Фото, 0, uploadFile.ContentLength);
                    //myNote.FileName = uploadFile.FileName;
                }

                db.People.Add(person);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return View(person);
        }

        // GET: People/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Person person = db.People.Find(id);
            if (person == null)
            {
                return HttpNotFound();
            }
            return View(person);
        }

        // POST: People/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "id,Фамилия,Имя,Отчество,Отдел,Должность,ВнТел,Кабинет,Телефон_1,Телефон_2,Email,Корпус,Этаж,Фото,Примечание,DocFile,TimeChange,EnterDataTime")] Person person)
        {
            if (ModelState.IsValid)
            {
                db.Entry(person).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(person);
        }

        // GET: People/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Person person = db.People.Find(id);
            if (person == null)
            {
                return HttpNotFound();
            }
            return View(person);
        }

        // POST: People/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            Person person = db.People.Find(id);
            db.People.Remove(person);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
